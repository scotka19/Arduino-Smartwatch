/* 
 * Arduino GPS clock with local time using NEO-6M module and 20x4 LCD.
 * This is a free software with NO WARRANTY.
 * https://simple-circuit.com/
*/
 #include <Wire.h>
#include <Adafruit_SSD1306.h>
#include <Adafruit_GFX.h>

#define OLED_WIDTH 128
#define OLED_HEIGHT 64

#define OLED_ADDR   0x3C
 
#include <TinyGPS++.h>        // include TinyGPS++ library
#include <TimeLib.h>          // include Arduino time library
#include <SoftwareSerial.h>   // include software serial library
TinyGPSPlus gps;
Adafruit_SSD1306 display(OLED_WIDTH, OLED_HEIGHT);
 
#define S_RX    8   // define software serial RX pin
#define S_TX    9   // define software serial TX pin
 
SoftwareSerial SoftSerial(S_RX, S_TX);   // configure SoftSerial library
 
// LCD module connections (RS, E, D4, D5, D6, D7)
//LiquidCrystal lcd(2, 3, 4, 5, 6, 7);
 
#define time_offset   3600  // define a clock offset of 3600 seconds (1 hour) ==> UTC + 1
 
// variable definitions
char Time[]  = "TIME: 00:00:00";
char Date[]  = "DATE: 00-00-2000";
byte last_second, Second, Minute, Hour, Day, Month;
int Year;
 
void setup(void)
{
  SoftSerial.begin(9600);  // initialize software serial at 9600 baud


  //serial_connection.begin(9600);//This opens up communications to the GPS  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
  display.begin(SSD1306_SWITCHCAPVCC, OLED_ADDR);
  display.clearDisplay();       //This clears the OLED screen so text can be printed
  display.setTextSize(2);        //this sets the text font size to 2
  display.setTextColor(WHITE);      
  display.setCursor(0, 0);        //this initializes the cursor position on the OLED for the text to start
  display.println("EGR 311");
  display.setTextSize(2);
  display.setTextColor(WHITE);
  display.setCursor(0, 17);
  display.println("SmartWatch");
  display.println("JW, KS, MD");

  display.display();

}
 
void loop(){
Serial.println("Latitude:");
    Serial.println(gps.location.lat(), 6);
    Serial.println("Longitude:");
    Serial.println(gps.location.lng(), 6);
    Serial.println("Speed MPH:");
    Serial.println(gps.speed.mph());
    Serial.println("Altitude Feet:");
    Serial.println(gps.altitude.feet());
    Serial.println("");
  while (SoftSerial.available() > 0)
  {
    if (gps.encode(SoftSerial.read()))
    {
      // get time from GPS module
      if (gps.time.isValid())
      {
        Minute = gps.time.minute();
        Second = gps.time.second();
        Hour   = gps.time.hour();
      }
 
      // get date drom GPS module
      if (gps.date.isValid())
      {
        Day   = gps.date.day();
        Month = gps.date.month();
        Year  = gps.date.year();
      }
 
      if(last_second != gps.time.second())  // if time has changed
      {
        last_second = gps.time.second();
 
        // set current UTC time
        setTime(Hour, Minute, Second, Day, Month, Year);
        // add the offset to get local time
        adjustTime(time_offset);
 
        // update time array
        Time[12] = second() / 10 + '0';
        Time[13] = second() % 10 + '0';
        Time[9]  = minute() / 10 + '0';
        Time[10] = minute() % 10 + '0';
        Time[6]  = hour()   / 10 + '0';
        Time[7]  = hour()   % 10 + '0';
 
        // update date array
        Date[14] = (year()  / 10) % 10 + '0';
        Date[15] =  year()  % 10 + '0';
        Date[9]  =  month() / 10 + '0';
        Date[10] =  month() % 10 + '0';
        Date[6]  =  day()   / 10 + '0';
        Date[7]  =  day()   % 10 + '0';
 
        // print time & date
        display.clearDisplay();       //This clears the OLED screen so text can be printed
        display.setTextSize(2);        //this sets the text font size to 2
        display.setTextColor(WHITE);      
        display.setCursor(0, 0);  
        //display.print(weekday());
        //display.setCursor(0, 20);     // move cursor to column 0 row 2
        display.print(Time);         // print time (HH:MM:SS)
        display.setCursor(0, 35);     // move cursor to column 0 row 3
        display.print(Date);         // print date (DD-MM-YYYY)
        display.display();
        delay(500);
      }
 
    }
 
  }
 
}
